{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projects\\\\AstroTracker1\\\\AstroTracker\\\\src\\\\components\\\\LayoutGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport SelectedCard from \"./SelectedCard\"; // Import SelectedCard for displaying the selected card\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LayoutGrid = ({\n  cards\n}) => {\n  _s();\n  const [selected, setSelected] = useState(null);\n\n  // Handle card click to set the selected card\n  const handleClick = card => {\n    setSelected(card);\n  };\n\n  // Close selected card modal\n  const handleClose = () => {\n    setSelected(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full p-10 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 max-w-7xl mx-auto\",\n    children: [cards.map(card => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"relative cursor-pointer rounded-lg overflow-hidden\",\n      onClick: () => handleClick(card) // Handle card click\n      ,\n      layoutId: `card-${card.id}`,\n      children: [/*#__PURE__*/_jsxDEV(motion.img, {\n        src: card.thumbnail,\n        alt: \"thumbnail\",\n        className: \"object-cover w-full h-full\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 left-0 text-white bg-black bg-opacity-50 p-4 w-full\",\n        children: card.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"fixed inset-0 bg-black opacity-50 z-40\",\n          onClick: handleClose // Close selected card on clicking overlay\n          ,\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectedCard, {\n          selected: selected,\n          onClose: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutGrid, \"PVKrpNrydW4BpnDEq9OT3cVmCk4=\");\n_c = LayoutGrid;\nexport default LayoutGrid;\nvar _c;\n$RefreshReg$(_c, \"LayoutGrid\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","SelectedCard","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutGrid","cards","_s","selected","setSelected","handleClick","card","handleClose","className","children","map","div","onClick","layoutId","id","img","src","thumbnail","alt","initial","opacity","animate","exit","fileName","_jsxFileName","lineNumber","columnNumber","content","onClose","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Projects/AstroTracker1/AstroTracker/src/components/LayoutGrid.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport SelectedCard from \"./SelectedCard\"; // Import SelectedCard for displaying the selected card\r\n\r\nconst LayoutGrid = ({ cards }) => {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  // Handle card click to set the selected card\r\n  const handleClick = (card) => {\r\n    setSelected(card);\r\n  };\r\n\r\n  // Close selected card modal\r\n  const handleClose = () => {\r\n    setSelected(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full p-10 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 max-w-7xl mx-auto\">\r\n      {cards.map((card) => (\r\n        <motion.div\r\n          key={card.id}\r\n          className=\"relative cursor-pointer rounded-lg overflow-hidden\"\r\n          onClick={() => handleClick(card)} // Handle card click\r\n          layoutId={`card-${card.id}`}\r\n        >\r\n          <motion.img\r\n            src={card.thumbnail}\r\n            alt=\"thumbnail\"\r\n            className=\"object-cover w-full h-full\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n          />\r\n          <div className=\"absolute bottom-0 left-0 text-white bg-black bg-opacity-50 p-4 w-full\">\r\n            {card.content}\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n\r\n      {/* Overlay when a card is selected */}\r\n      <AnimatePresence>\r\n        {selected && (\r\n          <>\r\n            <motion.div\r\n              className=\"fixed inset-0 bg-black opacity-50 z-40\"\r\n              onClick={handleClose} // Close selected card on clicking overlay\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n            />\r\n            <SelectedCard selected={selected} onClose={handleClose} />\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMa,WAAW,GAAIC,IAAI,IAAK;IAC5BF,WAAW,CAACE,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBH,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEP,OAAA;IAAKW,SAAS,EAAC,oGAAoG;IAAAC,QAAA,GAChHR,KAAK,CAACS,GAAG,CAAEJ,IAAI,iBACdT,OAAA,CAACJ,MAAM,CAACkB,GAAG;MAETH,SAAS,EAAC,oDAAoD;MAC9DI,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAACC,IAAI,CAAE,CAAC;MAAA;MAClCO,QAAQ,EAAE,QAAQP,IAAI,CAACQ,EAAE,EAAG;MAAAL,QAAA,gBAE5BZ,OAAA,CAACJ,MAAM,CAACsB,GAAG;QACTC,GAAG,EAAEV,IAAI,CAACW,SAAU;QACpBC,GAAG,EAAC,WAAW;QACfV,SAAS,EAAC,4BAA4B;QACtCW,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,IAAI,EAAE;UAAEF,OAAO,EAAE;QAAE;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACF7B,OAAA;QAAKW,SAAS,EAAC,uEAAuE;QAAAC,QAAA,EACnFH,IAAI,CAACqB;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,GAfDpB,IAAI,CAACQ,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBF,CACb,CAAC,eAGF7B,OAAA,CAACH,eAAe;MAAAe,QAAA,EACbN,QAAQ,iBACPN,OAAA,CAAAE,SAAA;QAAAU,QAAA,gBACEZ,OAAA,CAACJ,MAAM,CAACkB,GAAG;UACTH,SAAS,EAAC,wCAAwC;UAClDI,OAAO,EAAEL,WAAY,CAAC;UAAA;UACtBY,OAAO,EAAE;YAAEC,OAAO,EAAE;UAAE,CAAE;UACxBC,OAAO,EAAE;YAAED,OAAO,EAAE;UAAE,CAAE;UACxBE,IAAI,EAAE;YAAEF,OAAO,EAAE;UAAE;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACF7B,OAAA,CAACF,YAAY;UAACQ,QAAQ,EAAEA,QAAS;UAACyB,OAAO,EAAErB;QAAY;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAC1D;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAACxB,EAAA,CArDIF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAuDhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}