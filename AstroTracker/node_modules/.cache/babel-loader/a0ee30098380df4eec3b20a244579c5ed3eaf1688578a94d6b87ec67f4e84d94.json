{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projects\\\\AstroTracker1\\\\AstroTracker\\\\src\\\\components\\\\LayoutGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport SelectedCard from \"./SelectedCard\"; // Import the SelectedCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutGrid = ({\n  cards\n}) => {\n  _s();\n  const [selected, setSelected] = useState(null);\n\n  // Handle card click to capture its dimensions and set as selected\n  const handleClick = card => {\n    const cardElement = document.getElementById(`card-${card.id}`);\n    const {\n      width,\n      height\n    } = cardElement.getBoundingClientRect();\n    setSelected({\n      ...card,\n      cardWidth: width,\n      cardHeight: height\n    });\n  };\n\n  // Close selected card modal\n  const handleClose = () => {\n    setSelected(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full p-10 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 max-w-7xl mx-auto\",\n    children: [cards.map(card => /*#__PURE__*/_jsxDEV(motion.div, {\n      id: `card-${card.id}`,\n      className: `relative overflow-hidden rounded-lg cursor-pointer`,\n      onClick: () => handleClick(card),\n      layoutId: `card-${card.id}`,\n      children: [/*#__PURE__*/_jsxDEV(motion.img, {\n        src: card.thumbnail,\n        alt: \"thumbnail\",\n        className: \"object-cover h-full w-full\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 left-0 text-white bg-black bg-opacity-50 p-4 w-full\",\n        children: card.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selected && /*#__PURE__*/_jsxDEV(SelectedCard, {\n        selected: selected,\n        onClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutGrid, \"PVKrpNrydW4BpnDEq9OT3cVmCk4=\");\n_c = LayoutGrid;\nexport default LayoutGrid;\nvar _c;\n$RefreshReg$(_c, \"LayoutGrid\");","map":{"version":3,"names":["React","useState","motion","AnimatePresence","SelectedCard","jsxDEV","_jsxDEV","LayoutGrid","cards","_s","selected","setSelected","handleClick","card","cardElement","document","getElementById","id","width","height","getBoundingClientRect","cardWidth","cardHeight","handleClose","className","children","map","div","onClick","layoutId","img","src","thumbnail","alt","initial","opacity","animate","exit","fileName","_jsxFileName","lineNumber","columnNumber","content","onClose","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Projects/AstroTracker1/AstroTracker/src/components/LayoutGrid.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport SelectedCard from \"./SelectedCard\"; // Import the SelectedCard component\r\n\r\nconst LayoutGrid = ({ cards }) => {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  // Handle card click to capture its dimensions and set as selected\r\n  const handleClick = (card) => {\r\n    const cardElement = document.getElementById(`card-${card.id}`);\r\n    const { width, height } = cardElement.getBoundingClientRect();\r\n    setSelected({ ...card, cardWidth: width, cardHeight: height });\r\n  };\r\n\r\n  // Close selected card modal\r\n  const handleClose = () => {\r\n    setSelected(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full p-10 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 max-w-7xl mx-auto\">\r\n      {cards.map((card) => (\r\n        <motion.div\r\n          key={card.id}\r\n          id={`card-${card.id}`}\r\n          className={`relative overflow-hidden rounded-lg cursor-pointer`}\r\n          onClick={() => handleClick(card)}\r\n          layoutId={`card-${card.id}`}\r\n        >\r\n          <motion.img\r\n            src={card.thumbnail}\r\n            alt=\"thumbnail\"\r\n            className=\"object-cover h-full w-full\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n          />\r\n          <div className=\"absolute bottom-0 left-0 text-white bg-black bg-opacity-50 p-4 w-full\">\r\n            {card.content}\r\n          </div>\r\n        </motion.div>\r\n      ))}\r\n\r\n      {/* Modal for Selected Card */}\r\n      <AnimatePresence>\r\n        {selected && (\r\n          <SelectedCard\r\n            selected={selected}\r\n            onClose={handleClose}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMW,WAAW,GAAIC,IAAI,IAAK;IAC5B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQH,IAAI,CAACI,EAAE,EAAE,CAAC;IAC9D,MAAM;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGL,WAAW,CAACM,qBAAqB,CAAC,CAAC;IAC7DT,WAAW,CAAC;MAAE,GAAGE,IAAI;MAAEQ,SAAS,EAAEH,KAAK;MAAEI,UAAU,EAAEH;IAAO,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBZ,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA;IAAKkB,SAAS,EAAC,oGAAoG;IAAAC,QAAA,GAChHjB,KAAK,CAACkB,GAAG,CAAEb,IAAI,iBACdP,OAAA,CAACJ,MAAM,CAACyB,GAAG;MAETV,EAAE,EAAE,QAAQJ,IAAI,CAACI,EAAE,EAAG;MACtBO,SAAS,EAAE,oDAAqD;MAChEI,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACC,IAAI,CAAE;MACjCgB,QAAQ,EAAE,QAAQhB,IAAI,CAACI,EAAE,EAAG;MAAAQ,QAAA,gBAE5BnB,OAAA,CAACJ,MAAM,CAAC4B,GAAG;QACTC,GAAG,EAAElB,IAAI,CAACmB,SAAU;QACpBC,GAAG,EAAC,WAAW;QACfT,SAAS,EAAC,4BAA4B;QACtCU,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,IAAI,EAAE;UAAEF,OAAO,EAAE;QAAE;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFnC,OAAA;QAAKkB,SAAS,EAAC,uEAAuE;QAAAC,QAAA,EACnFZ,IAAI,CAAC6B;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,GAhBD5B,IAAI,CAACI,EAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBF,CACb,CAAC,eAGFnC,OAAA,CAACH,eAAe;MAAAsB,QAAA,EACbf,QAAQ,iBACPJ,OAAA,CAACF,YAAY;QACXM,QAAQ,EAAEA,QAAS;QACnBiC,OAAO,EAAEpB;MAAY;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlDIF,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAoDhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}